# Travis CI (MIT License) configuration file for the WP Rig WordPress theme development rig.
# @link https://travis-ci.org/

# For use with the WP Rig WordPress theme development rig.
# @link https://github.com/wprig/wprig

# Ditch sudo and use containers.
# @link https://docs.travis-ci.com/user/migrating-from-legacy/#Why-migrate-to-container-based-infrastructure%3F
# @link https://docs.travis-ci.com/user/workers/container-based-infrastructure/#Routing-your-build-to-container-based-infrastructure
sudo: false
dist: trusty

# Declare project language.
# @link https://about.travis-ci.org/docs/user/languages/php/
language: php

# Declare versions of PHP to use. Use one decimal max.
# @link https://docs.travis-ci.com/user/build-configuration/
matrix:
  fast_finish: true

  include:
    # Current $required_php_version for WordPress: 5.2.4
    # aliased to 5.2.17
    - php: '5.2'
      dist: precise
    # aliased to a recent 5.6.x version
    - php: '5.6'
      env: SNIFF=1
    # aliased to a recent 7.0.x version
    - php: '7.0'
    # aliased to a recent 7.2.x version
    - php: '7.2'
    # bleeding edge PHP
    - php: 'nightly'

  allow_failures:
    - php: 'nightly'

# Use this to prepare the system to install prerequisites or dependencies.
# e.g. sudo apt-get update.
# Failures in this section will result in build status 'errored'.
before_install:
  - |
    if [[ "$SNIFF" == "1" ]]; then
      npm install;
    fi

# Use this to prepare your build for testing.
# e.g. copy database configurations, environment variables, etc.
# Failures in this section will result in build status 'errored'.
before_script:
  # Speed up build time by disabling Xdebug.
  - phpenv config-rm xdebug.ini || echo 'No xdebug config.'
  # Install CodeSniffer and rulesets.
  - |
    if [[ "$SNIFF" == "1" ]]; then
      composer install;
    fi
  # After CodeSniffer install you should refresh your path.
  - |
    if [[ "$SNIFF" == "1" ]]; then
      phpenv rehash;
    fi
  # Pull in the WP Core jshint rules.
  - |
    if [[ "$SNIFF" == "1" ]]; then
      wget https://develop.svn.wordpress.org/trunk/.jshintrc;
    fi

# Run test script commands.
# Default is specific to project language.
# All commands must exit with code 0 on success. Anything else is considered failure.
script:
  # Search for PHP syntax errors.
  - find -L . -name '*.php' ! -path "*/vendor/*" -print0 | xargs -0 -n 1 -P 4 php -l
  # Run the theme through JavaScript Code Style checker.
  - |
    if [[ "$SNIFF" == "1" ]]; then
      $(npm bin)/eslint .;
    fi
  # WordPress Coding Standards.
  # @link https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards
  # @link https://pear.php.net/package/PHP_CodeSniffer/
  # Uses a custom ruleset based on WordPress. This ruleset is automatically
  # picked up by PHPCS as it's named `phpcs.xml(.dist)`.
  - |
    if [[ "$SNIFF" == "1" ]]; then
      vendor/bin/phpcs --runtime-set ignore_warnings_on_exit 1;
    fi

# Receive notifications for build results.
# @link https://docs.travis-ci.com/user/notifications/#Email-notifications
notifications:
  email: false
